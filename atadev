#!/usr/bin/env bash

# Find matches no matter case
shopt -s nocasematch

BLUE='\033[1;34m'
BOLD="\033[1m"
BROWN='\033[0;33m'
NC='\033[0m'
YELLOW='\033[1;33m'

# Figure out what is expected of us
# For githooks, we only want to run against changed files,
# but used as a command we want to look in all files.
USE="${1:-command}"
if [ "$0" = ".git/hooks/post-merge" ]; then
  USE="hook"
fi

changed_files="$(git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD)"
all_files="$(git ls-files)"
author="$(git config user.name)"
author_short="$(echo "$author" | cut -d " " -f1)"

if [ $USE = "hook" ]; then
  files=$changed_files
else
  files=$all_files
fi

messages="$(echo "$files" | xargs grep -i -- "@$author\|@$author_short")"
files_with_mentions="$(echo "$files" | xargs grep -li -- "@$author\|@$author_short")"

if [ -z "$messages" ]; then
  if [ $USE = "command" ]; then
    echo "No messages, sorry!"
  fi
  exit
else
  while IFS= read -r filename; do
    mentions="$(grep -in "@$author\|@$author_short" "$filename")"
    if [ -n "$mentions" ]; then
      # Always display short name
      mentions="${mentions//@$author/@$author_short}"
      # Colorize name
      mentions="${mentions//@$author_short/${YELLOW}@$author_short${NC}}"
      echo -e "\nMentions in ${BLUE}$filename${NC}"
      header_length=$((12 + ${#filename}))
      printf "%${header_length}s\n" | tr " " "="
      while IFS= read -r mention; do
        line="$(cut -d ':' -f1 <<< "$mention")"
        text="$(cut -d ':' -f2- <<< "$mention")"
        sender="$(git blame "$filename" -L "$line",+1 --line-porcelain | sed -n 's/^author //p')"
        echo -e "${BOLD}On line $line, ${BROWN}$sender${NC}${BOLD} says:${NC}"
        echo -e "  $text"
      done <<< "$mentions"
    fi
  done <<< "$files_with_mentions"
fi
